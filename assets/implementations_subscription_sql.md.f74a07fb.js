import { _ as _export_sfc, c as createElementBlock, o as openBlock, a as createStaticVNode } from "./app.2d1f51b6.js";
const __pageData = '{"title":"SQL","description":"","frontmatter":{},"headers":[{"level":2,"title":"Registration","slug":"registration"},{"level":2,"title":"Supported providers","slug":"supported-providers"},{"level":2,"title":"Configuration","slug":"configuration"}],"relativePath":"implementations/subscription/sql.md"}';
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="sql" tabindex="-1">SQL <a class="header-anchor" href="#sql" aria-hidden="true">#</a></h1><div class="language-"><pre><code>PM&gt; Install-Package Shuttle.Esb.Sql.Subscription\n</code></pre></div><p>Contains a sql-based <code>ISubscriptionManager</code> implementation. The subscription manager caches all subscriptions forever so should a new subscriber be added be sure to restart the publisher endpoint service.</p><h2 id="registration" tabindex="-1">Registration <a class="header-anchor" href="#registration" aria-hidden="true">#</a></h2><p>The required components may be registered by calling <code>ComponentRegistryExtensions.RegisterSubscription(IComponentRegistry)</code>.</p><h2 id="supported-providers" tabindex="-1">Supported providers <a class="header-anchor" href="#supported-providers" aria-hidden="true">#</a></h2><ul><li><code>Microsoft.Data.SqlClient</code></li><li><code>System.Data.SqlClient</code></li><li><code>Npgsql</code> / thanks to <a href="https://github.com/hopla" target="_blank" rel="noopener noreferrer">hopla</a></li></ul><p>If you&#39;d like support for another SQL-based provider please feel free to give it a bash and send a pull request if you <em>do</em> go this route. You are welcome to create an issue and assistance will be provided where possible.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-hidden="true">#</a></h2><p>The configuration section is optional as the defaults will be applied when no section is provided.</p><div class="language-xml"><pre><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">configuration</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">configSections</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">section</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">subscription</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Shuttle.Esb.Sql.Subscription.SubscriptionSection, Shuttle.Esb.Sql.Subscription</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">/&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">configSections</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span></span>\n<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">subscription</span></span>\n<span class="line"><span style="color:#89DDFF;">		</span><span style="color:#C792EA;">connectionStringName</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Subscription</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">		</span><span style="color:#C792EA;">subscribe</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Normal|Ensure|Ignore</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#89DDFF;">	/&gt;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  .</span></span>\n<span class="line"><span style="color:#A6ACCD;">  .</span></span>\n<span class="line"><span style="color:#A6ACCD;">  .</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">configuration</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre></div><table><thead><tr><th>Attribute</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>connectionStringName</code></td><td>Subscription</td><td>The name of the <code>connectionString</code> to use to connect to the subscription store.</td></tr><tr><td><code>subscribe</code></td><td>Normal</td><td>Indicates how calls to the <code>Subscribe</code> method are dealt with: <br>- <code>Normal</code> is the <em><strong>default</strong></em> and will subscribe to the given message type(s) if they have not been subscribed to yet.<br>- <code>Ensure</code> will check to see that the subscription exists and if not will throw an <code>ApplicationException</code>.<br>- <code>Ignore</code> will simply ignore the subscription request.</td></tr></tbody></table><p>Whenever the endpoint is configured as a worker no new subscriptions will be registered against the endpoint since any published events should be subscribed to only by the distributor endpoint. When using a broker such as RabbitMQ all the endpoints feed off the same work queue uri and any of the endpoints could create the subscription.</p><p>When moving to a non-development environment it is recommended that you make use of the <code>Ensure</code> option for the <code>subscribe</code> attribute since any change to the work queue uri will result in possible duplicate subscriptions.</p>', 14);
const _hoisted_15 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_15);
}
var sql = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { __pageData, sql as default };
