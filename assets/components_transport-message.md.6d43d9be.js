import { _ as _export_sfc, o as openBlock, c as createElementBlock, a as createStaticVNode } from "./app.35c0796e.js";
const __pageData = JSON.parse('{"title":"TransportMessage","description":"","frontmatter":{},"headers":[{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[{"level":3,"title":"Message","slug":"message","link":"#message","children":[]},{"level":3,"title":"MessageReceivedId","slug":"messagereceivedid","link":"#messagereceivedid","children":[]},{"level":3,"title":"MessageId","slug":"messageid","link":"#messageid","children":[]},{"level":3,"title":"CorrelationId","slug":"correlationid","link":"#correlationid","children":[]},{"level":3,"title":"SenderInboxWorkQueueUri","slug":"senderinboxworkqueueuri","link":"#senderinboxworkqueueuri","children":[]},{"level":3,"title":"RecipientInboxWorkQueueUri","slug":"recipientinboxworkqueueuri","link":"#recipientinboxworkqueueuri","children":[]},{"level":3,"title":"PrincipalIdentityName","slug":"principalidentityname","link":"#principalidentityname","children":[]},{"level":3,"title":"IgnoreTillDate","slug":"ignoretilldate","link":"#ignoretilldate","children":[]},{"level":3,"title":"ExpiryDate","slug":"expirydate","link":"#expirydate","children":[]},{"level":3,"title":"Priority","slug":"priority","link":"#priority","children":[]},{"level":3,"title":"SendDate","slug":"senddate","link":"#senddate","children":[]},{"level":3,"title":"FailureMessages","slug":"failuremessages","link":"#failuremessages","children":[]},{"level":3,"title":"MessageType","slug":"messagetype","link":"#messagetype","children":[]},{"level":3,"title":"AssemblyQualifiedName","slug":"assemblyqualifiedname","link":"#assemblyqualifiedname","children":[]},{"level":3,"title":"EncryptionAlgorithm","slug":"encryptionalgorithm","link":"#encryptionalgorithm","children":[]},{"level":3,"title":"CompressionAlgorithm","slug":"compressionalgorithm","link":"#compressionalgorithm","children":[]},{"level":3,"title":"Headers","slug":"headers","link":"#headers","children":[]}]}],"relativePath":"components/transport-message.md"}');
const _sfc_main = { name: "components/transport-message.md" };
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="transportmessage" tabindex="-1">TransportMessage <a class="header-anchor" href="#transportmessage" aria-hidden="true">#</a></h1><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><h3 id="message" tabindex="-1">Message <a class="header-anchor" href="#message" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Byte</span><span style="color:#89DDFF;">[]</span><span style="color:#A6ACCD;"> Message </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> set</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>The actual message stream returned from the [Serializer] represented as a byte array.</p><h3 id="messagereceivedid" tabindex="-1">MessageReceivedId <a class="header-anchor" href="#messagereceivedid" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Guid MessageReceivedId </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> set</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>This is the Id of the message that was being processed when the message was sent. So if message with <code>MessageId</code> <em>ABC123</em> was received and you sent another message that will have a new <code>MessageId</code> of, say, <em>DEF321</em> then the <code>MessageReceivedId</code> of the new message with <code>MessageId</code>: <em>DEF321</em> will be <em>ABC123</em>.</p><h3 id="messageid" tabindex="-1">MessageId <a class="header-anchor" href="#messageid" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Guid MessageId </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> set</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>The unique Id of this message.</p><h3 id="correlationid" tabindex="-1">CorrelationId <a class="header-anchor" href="#correlationid" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> string CorrelationId </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> set</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>The <code>CorrelationId</code> is not used by the core Shuttle.Esb and you are free to use it to correlate your messages.</p><h3 id="senderinboxworkqueueuri" tabindex="-1">SenderInboxWorkQueueUri <a class="header-anchor" href="#senderinboxworkqueueuri" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> string SenderInboxWorkQueueUri </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> set</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>The <code>Uri</code> of the inbox of the endpoint where the message originated. If the sender did not have an inbox then this value will be empty.</p><h3 id="recipientinboxworkqueueuri" tabindex="-1">RecipientInboxWorkQueueUri <a class="header-anchor" href="#recipientinboxworkqueueuri" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> string RecipientInboxWorkQueueUri </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> set</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>The <code>Uri</code> of the inbox of the destination endpoint of this message.</p><h3 id="principalidentityname" tabindex="-1">PrincipalIdentityName <a class="header-anchor" href="#principalidentityname" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> string PrincipalIdentityName </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> set</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>The name of <code>WindowsIdentity</code> that dispatched the message. May be <em>Anonymous</em>.</p><h3 id="ignoretilldate" tabindex="-1">IgnoreTillDate <a class="header-anchor" href="#ignoretilldate" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DateTime IgnoreTillDate </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> set</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>The message will not be processed while the current date is before this date.</p><h3 id="expirydate" tabindex="-1">ExpiryDate <a class="header-anchor" href="#expirydate" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DateTime ExpiryDate </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> set</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><h3 id="priority" tabindex="-1">Priority <a class="header-anchor" href="#priority" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> int Priority </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> set</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>Determines the date that the message will expire. It will not be processed after this date. The default value is <code>DateTime.MaxValue</code>..</p><h3 id="senddate" tabindex="-1">SendDate <a class="header-anchor" href="#senddate" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> System</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DateTime SendDate </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> set</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>The date that the message was sent.</p><h3 id="failuremessages" tabindex="-1">FailureMessages <a class="header-anchor" href="#failuremessages" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> FailureMessages </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> set</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>A list of message containing each failure that occurred.</p><h3 id="messagetype" tabindex="-1">MessageType <a class="header-anchor" href="#messagetype" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> string MessageType </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> set</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>The <code>FullName</code> of the message type represented by the <code>Message</code> property.</p><h3 id="assemblyqualifiedname" tabindex="-1">AssemblyQualifiedName <a class="header-anchor" href="#assemblyqualifiedname" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> string AssemblyQualifiedName </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> set</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>The <code>AssemblyQualifiedName</code> of the message type represented by the <code>Message</code> property.</p><h3 id="encryptionalgorithm" tabindex="-1">EncryptionAlgorithm <a class="header-anchor" href="#encryptionalgorithm" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> string EncryptionAlgorithm </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> set</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>The name of the encryption algorithm used to encrypt the message; else empty.</p><h3 id="compressionalgorithm" tabindex="-1">CompressionAlgorithm <a class="header-anchor" href="#compressionalgorithm" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> string CompressionAlgorithm </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> set</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>The name of the compression algorithm used to compress the message; else empty.</p><h3 id="headers" tabindex="-1">Headers <a class="header-anchor" href="#headers" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> List</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">Shuttle</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Esb</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TransportHeader</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> Headers </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> get</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> set</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>An arbitrary list of <code>TransportHeader</code> objects that may be used to carry information not contained in the <code>Message</code> property.</p>', 52);
const _hoisted_53 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_53);
}
const transportMessage = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  transportMessage as default
};
