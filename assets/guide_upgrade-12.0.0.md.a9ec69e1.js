import { _ as _export_sfc, c as createElementBlock, o as openBlock, a as createStaticVNode } from "./app.2d1f51b6.js";
const __pageData = '{"title":"Upgrade to v-12.0.0 #","description":"","frontmatter":{},"headers":[],"relativePath":"guide/upgrade-12.0.0.md"}';
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="upgrade-to-v-12-0-0" tabindex="-1">Upgrade to v-12.0.0 <a class="header-anchor" href="#upgrade-to-v-12-0-0" aria-hidden="true">#</a></h1><h1 id="register" tabindex="-1">Register <a class="header-anchor" href="#register" aria-hidden="true">#</a></h1><p>Prior to version <code>12.0.0</code> the service bus components were registered using the static <code>Register()</code> method on the <code>ServiceBus</code> class:</p><div class="language-c#"><pre><code><span class="line"><span style="color:#A6ACCD;">ServiceBus</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Register</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">IComponentRegistry</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>The method is now marked as <code>Obsolete</code> but will still work until it is removed in the next version:</p><div class="language-c#"><pre><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Obsolete</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">This method has been replaced by `ComponentRegistryExtensions.RegisterServiceBus()`.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">)]</span></span>\n<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IServiceBusConfiguration</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Register</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IComponentRegistry</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">registry</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> registry</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">RegisterServiceBus</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>As can be seen in the above implementation the new way to register the service bus components with the component registry is to use the <code>RegisterServiceBus()</code> extension method on the <code>IComponentRegistry</code> implementation which has the following signature:</p><div class="language-c#"><pre><code><span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IServiceBusConfiguration</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">RegisterServiceBus</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">this</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IComponentRegistry</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">registry</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IServiceBusConfiguration</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">configuration</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null)</span></span>\n<span class="line"></span></code></pre></div><h1 id="resolve" tabindex="-1">Resolve <a class="header-anchor" href="#resolve" aria-hidden="true">#</a></h1><p>Prior to version 12.0.0 thhe service bus instance was obtained using the static <code>Create()</code> method on the ServiceBus class:</p><div class="language-c#"><pre><code><span class="line"><span style="color:#F78C6C;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">serviceBus</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ServiceBus</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Create</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">IComponentResolver</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>The method is now marked as <code>Obsolete</code> but will still work until it is removed in the next version:</p><div class="language-c#"><pre><code><span class="line"><span style="color:#89DDFF;">[</span><span style="color:#FFCB6B;">Obsolete</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Please create an instance of the service bus using `IComponentResolver.Resolve&lt;IServiceBus&gt;()`.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)]</span></span>\n<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">IServiceBus</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Create</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IComponentResolver</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">resolver</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">    Guard</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">AgainstNull</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">resolver</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">nameof</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">resolver</span><span style="color:#89DDFF;">));</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> resolver</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Resolve</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IServiceBus</span><span style="color:#89DDFF;">&gt;();</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre></div><p>As can be seen in the above implementation the new way to resolve and instance of the service bus is to use the <code>IComponentResolver</code> instance directly.</p>', 14);
const _hoisted_15 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_15);
}
var upgrade12_0_0 = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { __pageData, upgrade12_0_0 as default };
