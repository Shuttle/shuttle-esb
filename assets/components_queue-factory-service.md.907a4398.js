import { _ as _export_sfc, o as openBlock, c as createElementBlock, a as createStaticVNode } from "./app.c73b04f3.js";
const __pageData = JSON.parse('{"title":"Queue Factory Service","description":"","frontmatter":{},"headers":[{"level":2,"title":"Methods","slug":"methods","link":"#methods","children":[{"level":3,"title":"Get","slug":"get","link":"#get","children":[]},{"level":3,"title":"Factories","slug":"factories","link":"#factories","children":[]},{"level":3,"title":"Register","slug":"register","link":"#register","children":[]},{"level":3,"title":"Contains","slug":"contains","link":"#contains","children":[]}]}],"relativePath":"components/queue-factory-service.md"}');
const _sfc_main = { name: "components/queue-factory-service.md" };
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="queue-factory-service" tabindex="-1">Queue Factory Service <a class="header-anchor" href="#queue-factory-service" aria-hidden="true">#</a></h1><p>An implementation of the <code>IQueueFactoryService</code> interface is used to manage the queue factories used in Shuttle.Esb.</p><p>The queue factory service should not be swapped out for your own implementation as it is integral to the functioning of Shuttle.Esb and the default implementation should suffice.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="get" tabindex="-1">Get <a class="header-anchor" href="#get" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#FFCB6B;">IQueueFactory</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">(string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">scheme</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#FFCB6B;">IQueueFactory</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Get</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">Uri</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">uri</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>The method will return an instance of the queue factory registered for the requested <code>scheme</code> in the URI.</p><h3 id="factories" tabindex="-1">Factories <a class="header-anchor" href="#factories" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#FFCB6B;">IEnumerable</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">IQueueFactory</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Factories</span><span style="color:#89DDFF;">();</span></span>\n<span class="line"></span></code></pre></div><p>Returns the <code>IQueueFactory</code> implementations that the queue factory service is aware of.</p><h3 id="register" tabindex="-1">Register <a class="header-anchor" href="#register" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Register</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">IQueueFactory</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">queueFactory</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>Use this method to explicitly register a queue factory instance.</p><h3 id="contains" tabindex="-1">Contains <a class="header-anchor" href="#contains" aria-hidden="true">#</a></h3><div class="language-c#"><button class="copy"></button><span class="lang">c#</span><pre><code><span class="line"><span style="color:#89DDFF;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Contains</span><span style="color:#89DDFF;">(string</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">scheme</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><p>This method determines whether the queue factory service has a queue factory registered for the given scheme.</p>', 16);
const _hoisted_17 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_17);
}
const queueFactoryService = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  queueFactoryService as default
};
