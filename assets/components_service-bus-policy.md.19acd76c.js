import { _ as _export_sfc, c as createElementBlock, o as openBlock, a as createStaticVNode } from "./app.28dce079.js";
const __pageData = '{"title":"Service Bus Policy","description":"","frontmatter":{},"headers":[{"level":2,"title":"Methods","slug":"methods"},{"level":3,"title":"EvaluateMessageHandlingFailure","slug":"evaluatemessagehandlingfailure"},{"level":3,"title":"EvaluateMessageDistributionFailure","slug":"evaluatemessagedistributionfailure"},{"level":3,"title":"EvaluateOutboxFailure","slug":"evaluateoutboxfailure"}],"relativePath":"components/service-bus-policy.md"}';
const _sfc_main = {};
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="service-bus-policy" tabindex="-1">Service Bus Policy <a class="header-anchor" href="#service-bus-policy" aria-hidden="true">#</a></h1><p>An implementation of the <code>IServiceBusPolicy</code> interface is used to evaluate failures and determine whether the failure should be retried.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="evaluatemessagehandlingfailure" tabindex="-1">EvaluateMessageHandlingFailure <a class="header-anchor" href="#evaluatemessagehandlingfailure" aria-hidden="true">#</a></h3><div class="language-c#"><pre><code><span class="line"><span style="color:#FFCB6B;">MessageFailureAction</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">EvaluateMessageHandlingFailure</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">OnPipelineException</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">pipelineEvent</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><h3 id="evaluatemessagedistributionfailure" tabindex="-1">EvaluateMessageDistributionFailure <a class="header-anchor" href="#evaluatemessagedistributionfailure" aria-hidden="true">#</a></h3><div class="language-c#"><pre><code><span class="line"><span style="color:#FFCB6B;">MessageFailureAction</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">EvaluateMessageDistributionFailure</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">OnPipelineException</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">pipelineEvent</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div><h3 id="evaluateoutboxfailure" tabindex="-1">EvaluateOutboxFailure <a class="header-anchor" href="#evaluateoutboxfailure" aria-hidden="true">#</a></h3><div class="language-c#"><pre><code><span class="line"><span style="color:#FFCB6B;">MessageFailureAction</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">EvaluateOutboxFailure</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">OnPipelineException</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">pipelineEvent</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"></span></code></pre></div>', 9);
const _hoisted_10 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_10);
}
var serviceBusPolicy = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { __pageData, serviceBusPolicy as default };
